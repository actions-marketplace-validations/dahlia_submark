name: build
on:
  push: []
  schedule:
  - cron: 59 14 * * *
  pull_request: []

jobs:
  test:
    strategy:
      matrix:
        os:
        - ubuntu-20.04
        - macos-11
        - windows-2022
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      with:
        enable-stack: true
    - name: Cache Stack files (non-Windows)
      if: "runner.os != 'Windows'"
      uses: actions/cache@v2
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          ~/.stack
        key: stack-${{ runner.os }}-${{ runner.arch }}
    - name: Cache Stack files (Windows)
      if: "runner.os == 'Windows'"
      uses: actions/cache@v2
      with:
        path: |
          %APPDATA%\cabal\packages
          %APPDATA%\cabal\store
          %APPDATA%\stack
        key: stack-${{ runner.os }}-${{ runner.arch }}
    - name: Resolve dependencies
      run: stack install --test --only-dependencies
    - name: Build
      run: stack build --test
    - name: Test
      run: stack test
    - name: Build for release (Linux & Windows)
      if: runner.os == 'Linux' || runner.os == 'Windows'
      run: stack build --flag submark:static --copy-bins
    - name: Build for release (macOS)
      if: runner.os == 'macOS'
      run: stack build --copy-bins
    - id: bin-path
      run: |
        echo "::set-output name=bin-path::$(stack path --local-bin)/submark"
    - uses: crazy-max/ghaction-upx@v1
      if: runner.os == 'Linux' || runner.os == 'Windows'
      with:
        files: ${{ steps.bin-path.outputs.bin-path }}
        args: "-9"
    - if: github.ref_type == 'tag'
      run: '[[ "$(stack query locals submark version)" = "$GITHUB_REF_NAME" ]]'

  check:
    if: github.event_name == 'pull_request'
    env:
      CHECKMATE_DOWNLOAD_URL: https://github.com/dahlia/checkmate/releases/download/0.4.0/checkmate-linux-x86_64
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - run: |
        set -evx
        mkdir -p ~/bin
        curl -L -o ~/bin/checkmate "$CHECKMATE_DOWNLOAD_URL"
        chmod +x ~/bin/checkmate
        ~/bin/checkmate github \
          --token "${{ secrets.GITHUB_TOKEN }}" \
          --login "$GITHUB_REPOSITORY_OWNER" \
          --repo "${GITHUB_REPOSITORY#*/}" \
          --pr "$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")"

  docker-image:
    env:
      IMG_REPO: ghcr.io/${{ github.repository }}
      IMG_TAG: git-${{ github.sha }}
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
    - run: |
        set -exv
        if [[ "$GITHUB_REF_TYPE" = "tag" ]]; then
          tag_label="--label org.opencontainers.image.version=$GITHUB_REF_NAME"
        fi
        docker build \
          --tag "$IMG_REPO:$IMG_TAG" \
          --label \
            org.opencontainers.image.url=https://github.com/$GITHUB_REPOSITORY \
          $tag_label \
          .
        docker login ghcr.io \
          --username "$GITHUB_REPOSITORY_OWNER" \
          --password-stdin <<< "${{ secrets.GITHUB_TOKEN }}"
        docker push "$IMG_REPO:$IMG_TAG"
    - if: github.ref_type == 'tag'
      run: |
        set -exv
        docker tag "$IMG_REPO:$IMG_TAG" "$IMG_REPO:$GITHUB_REF_NAME"
        docker push "$IMG_REPO:$GITHUB_REF_NAME"
        docker tag "$IMG_REPO:$IMG_TAG" "$IMG_REPO:latest"
        docker push "$IMG_REPO:latest"
